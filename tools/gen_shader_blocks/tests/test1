block Standard3D {
    mat4x4 mvp_matrix;
};

block StandardLoopWindow {
    float aspect_ratio;
    float time;
};

block Lights {
    #define MAX_NUM_DIRECTIONAL_LIGHTS 8
    #define MAX_NUM_POINT_LIGHTS 8
    struct DirectionalLight {
        vec4 color;
        vec3 direction;
        vec3 half_vector;
        mat4x4 shadow_matrix;
    };
    struct PointLight {
        vec4 color;
        vec3 position;
        float linear_attenuation;
        float quadratic_attenuation;
        float cubic_attenuation;
    };
    mat4x4 active_shadow_matrix;
    int num_directional_lights;
    int num_point_lights;
    sampler2DShadow directional_light_shadow_maps[MAX_NUM_DIRECTIONAL_LIGHTS];
    DirectionalLight directional_lights[MAX_NUM_DIRECTIONAL_LIGHTS];
    sampler2DShadow point_light_shadow_maps[MAX_NUM_POINT_LIGHTS];
    PointLight point_lights[MAX_NUM_POINT_LIGHTS];
};
block ContrivedStuff {
    #define NUM 1000
    #define ANOTHER_NUM 33

    struct Stuff {
        int a;
        int b;
        bool o;
        vec3 v;
        vec3 v2;
        vec4 v3;
        vec3 v4;
    };
    bool ays[NUM];
    Stuff things[NUM];
    vec3 vvvvvv[ANOTHER_NUM];
    bool cool;
    struct OtherStuff {
        uint a;
        int i;
        float stuff;
        vec3 cool;
        mat4x4 mvp_matrix;
        mat3x3 topology;
        ivec2 fish;
    };
    vec2 a_vec;
    vec3 a_vec;
};
