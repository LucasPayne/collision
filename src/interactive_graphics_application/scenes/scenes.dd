

// really neat:
// caching by paths allows "prefabrifications" to just in-line their resource manifests, while
// for example further uses of path "Scenes/dirt/body/geometry" for a Geometry resource will be cached.
// -----------------------
// But, that doesn't really work directly as wanted, as a dictionary can be used with no further masks. How would
// the resource system know this?
// ---------
// In-lining is fine, and treated the same as something like
// geometry < Models/quad.


dirt_material < Material (
    type: Resources/Materials/textured_phong;
    diffuse_map < Resources/Textures/minecraft/dirt;
    properties < (
        int specular: 1;
    );
);

dirt < GameObject (
    body < Body (
        scale: 1;
        geometry: Resources/Models/block;
        material: Data/Scenes/dirt_material;
    );
);
scene1 < Scene (
    1 < dirt ( transform < Transform ( position: 0,0,-10; ); bool testing_value: true;);
    2 < dirt ( transform < Transform ( position: 0,0,-5; ););
    3 < dirt ( transform < Transform ( position: 0,0,-3; ););
    4 < dirt ( transform < Transform ( position: -5,0,-7; ););
    5 < dirt ( transform < Transform ( position: -5,0,-7; ););
    6 < dirt ( transform < Transform ( position: -3,0,-3; ););
    7 < dirt ( transform < Transform ( position: -1,0,-2; ););
);
scene2 < Scene (
    1 < GameObject (
        transform < Transform ( position: -2, -2, -6; );
        body < Body (
            scale: 100;
            // geometry < Resources/Models/icosohedron;
            // material < Resources/Materials/red;
        );
    );
);



